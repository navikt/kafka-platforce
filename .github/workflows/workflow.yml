name: Test/Build/Deploy - with dispatcher

on:
  workflow_call:
    inputs:
      DEPLOY_APP:
        required: true
        type: string
      DEPLOY_CLUSTER:
        required: true
        type: string
      FLAG_SAMPLE:
        required: true
        type: boolean
      FLAG_SEEK:
        required: true
        type: boolean
      SEEK_OFFSET:
        required: true
        type: string
      FLAG_NO_POST:
        required: true
        type: boolean
      FLAG_RUN_ONCE:
        required: true
        type: boolean
  workflow_dispatch:
    inputs:
      DEPLOY_APP:
        description: 'Deployment Application'
        required: true
        type: choice
        default: 'sf-pdl-kafka'
        options:
          - 'sf-pdl-kafka'
          - 'sf-geografisktilknytning'
      DEPLOY_CLUSTER:
        description: 'Deployment Cluster'
        required: true
        type: choice
        default: 'dev-gcp'
        options:
          - 'dev-gcp'
          - 'prod-gcp'
      FLAG_SAMPLE:
        description: "Sample"
        required: true
        type: boolean
      FLAG_SEEK:
        description: "Seek"
        required: true
        type: boolean
      SEEK_OFFSET:
        description: "Seek offset"
        required: true
        default: 0
      FLAG_NO_POST:
        description: "No post"
        required: true
        type: boolean
      FLAG_RUN_ONCE:
        description: "Run once"
        required: true
        type: boolean
run-name: >-
  ${{ github.event.workflow_call.head_commit.message }}
  ${{ inputs.DEPLOY_APP }} to ${{ inputs.DEPLOY_CLUSTER }}
  ${{ inputs.FLAG_SAMPLE && ' - SAMPLE' || '' }}
  ${{ inputs.FLAG_SEEK && format(' - SEEK {0}', inputs.SEEK_OFFSET) || '' }}
  ${{ inputs.FLAG_NO_POST && ' - NO_POST' || '' }}
  ${{ inputs.FLAG_RUN_ONCE && ' - RUN_ONCE' || '' }}
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Build and run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew test
  build:
    name: Build and push Docker container
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    outputs:
      image: ${{ steps.docker-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Setup Gradle to generate and submit dependency graphs
        uses: gradle/gradle-build-action@v3
        with:
          dependency-graph: generate-and-submit
      - name: Build JAR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean build shadowJar -x test
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: teamcrm
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
  deploy:
    name: Deploy ${{ inputs.DEPLOY_APP }} to ${{ inputs.DEPLOY_CLUSTER }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ inputs.DEPLOY_CLUSTER }}
          RESOURCE: .nais/${{ inputs.DEPLOY_APP }}/${{ inputs.DEPLOY_CLUSTER }}.yaml
          VAR: image=${{ needs.build.outputs.image }},DEPLOY_APP=${{ inputs.DEPLOY_APP }},DEPLOY_CLUSTER=${{ inputs.DEPLOY_CLUSTER }},FLAG_SAMPLE=${{ inputs.FLAG_SAMPLE }},FLAG_SEEK=${{ inputs.FLAG_SEEK }},SEEK_OFFSET=${{ inputs.SEEK_OFFSET }},FLAG_NO_POST=${{ inputs.FLAG_NO_POST }},FLAG_RUN_ONCE=${{ inputs.FLAG_RUN_ONCE }}